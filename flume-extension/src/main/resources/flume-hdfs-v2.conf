
tier1.channels                                                                          = bt1_logstash_meeting_hdfs_ch
tier1.sinks                                                                             = bt1_logstash_meeting_hdfs_sk

tier1.channels.bt1_logstash_meeting_hdfs_ch.type                                        = com.webex.dap.flume.channel.KafkaChannel
tier1.channels.bt1_logstash_meeting_hdfs_ch.kafka.topic                                 = bt1_logstash_meeting_hdfs
tier1.channels.bt1_logstash_meeting_hdfs_ch.kafka.bootstrap.servers                     = bt1-kafka-s.webex.com:9092
tier1.channels.bt1_logstash_meeting_hdfs_ch.kafka.consumer.group.id                     = hf93_test
tier1.channels.bt1_logstash_meeting_hdfs_ch.kafka.offsets.storage                       = kafka
tier1.channels.bt1_logstash_meeting_hdfs_ch.kafka.consumer.auto.offset.reset            = latest
tier1.channels.bt1_logstash_meeting_hdfs_ch.kafka.consumer.client.id                    = harry_test
tier1.channels.bt1_logstash_meeting_hdfs_ch.parseAsFlumeEvent                           = false


tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors					                      = i1
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.type                        = com.webex.dap.flume.interceptor.JsonpathMappingInterceptor$Builder

tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.field.type                  = $.type
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.field.metricName           = $.message.metricName
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.field.featureName           = $.message.featureName
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.default.type                = no_type
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.default.metricName         = no_metricName
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.default.featureName         = no_featureName

#tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.mapping.type.mrssvr        = mrs
#tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.mapping.type.mcrsvr        = mrs

tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.merge.pattern               = type:metricName:featureName
tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.merge.value                 = j2eeapp:urlapi:
#tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.merge.field.separator       = ,
#tier1.channels.bt1_logstash_meeting_hdfs_ch.interceptors.i1.merge.collection.separator  = :


tier1.sinks.bt1_logstash_meeting_hdfs_sk.type                   = hdfs
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.path              = hdfs://rphf93rpd001.qa.webex.com:8020/tmp/hdfs-test/%{type}/%{featureName}-%{metricsName}/day=%Y-%m-%d
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.filePrefix        = FlumeData-%[localhost]
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.rollInterval      = 3600
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.callTimeout       = 30000
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.rollSize          = 268435456
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.rollCount         = 0
#tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.codeC             = lzo
#tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.fileType          = CompressedStream
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.fileType          = DataStream
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.batchSize         = 10000
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.idleTimeout       = 60
tier1.sinks.bt1_logstash_meeting_hdfs_sk.hdfs.useLocalTimeStamp = true

tier1.sinks.bt1_logstash_meeting_hdfs_sk.channel                = bt1_logstash_meeting_hdfs_ch